server:
  port: 8282

spring:
  application:
    name: redis-demo
  # 热启动
  devtools:
    restart:
      enabled: true
# 数据源配置
  datasource:
    url: jdbc:sqlserver://192.168.0.179:1433;DatabaseName=IEIS_SPC
    driver-Class-Name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    username: sa
    password: 123456
    # 下面为连接池的补充设置，应用到上面所有数据源中
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM T_B01_USER
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    logSlowSql: true
# Redis配置
  redis:
    # Redis服务器地址
    host: 127.0.0.1
    # Redis服务器连接端口
    port: 6379
    jedis:
      pool:
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 100000
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 0
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 100
    # 连接超时时间（毫秒）
    timeout: 5000

# mybatis配置
mybatis:
  type-aliases-package: com.xuz.redis.pojo
  mapper-locations: classpath:mapper/*.xml
  # 表字段映射
  configuration:
    map-underscore-to-camel-case: true

